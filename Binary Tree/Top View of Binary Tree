/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        vector<int>ans;
        if(root==NULL){
            return ans;
        }
        map<int,int>mpp;
        queue<pair<Node*,int>>q;
        q.push({root,0});
        while(!q.empty()){
            auto it = q.front();
            q.pop();
            Node* temp = it.first;
            int line = it.second;
            if(mpp.find(line)==mpp.end()){
                mpp[line]=temp->data;
            }
            if(temp->left!=NULL){
                q.push({temp->left,line-1});
            }
            if(temp->right!=NULL){
                q.push({temp->right,line+1});
            }
        }
        for(auto &itr:mpp){
            ans.push_back(itr.second);
        }
        return ans;
    }

};
