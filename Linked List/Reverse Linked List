class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==NULL || head->next==NULL){
            return head;
        }
        ListNode* prev=NULL;
        ListNode* curr=head;
        ListNode* forward;
        while(curr!=NULL){
            forward=curr->next;
            curr->next=prev;
            prev=curr;
            curr=forward;
        }
        return prev;
//          if(head==NULL){
//       return NULL;
//    }
//    else if (head->next==NULL)
//    {
//       return head;
//    }
//    ListNode* newHead=reverseList(head->next);
//    head->next->next=head;
//    head->next=NULL;
//    return newHead;
    }
};
